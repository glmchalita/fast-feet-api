generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  MEMBER
}

model User {
  id       String  @id @default(uuid())
  name     String
  email    String  @unique
  password String
  role     Role
  cpf      String? @unique

  parcels Parcel[]

  @@map("users")
}

model Recipient {
  id            String  @id @default(uuid())
  name          String
  cpf           String  @unique
  email         String  @unique
  state         String
  city          String
  zipCode       String  @map("zip_code")
  streetAddress String  @map("street_address")
  neighborhood  String
  latitude      Decimal
  longitude     Decimal

  parcels Parcel[]

  @@map("recipients")
}

enum Status {
  ORDER_CREATED
  READY_FOR_COLLECT
  COLLECTED
  OUT_FOR_DELIVERY
  DELIVERED
  RETURNED
}

model Parcel {
  id             String    @id @default(uuid())
  trackingNumber String    @unique @map("tracking_number")
  currentStatus  Status    @default(ORDER_CREATED) @map("current_status")
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime? @updatedAt @map("updated_at")
  recipientId    String    @map("recipient_id")
  courierId      String?   @map("courier_id")

  statusHistory StatusHistory[]
  attachment    Attachment[]

  recipient Recipient @relation(fields: [recipientId], references: [id])
  user      User?     @relation(fields: [courierId], references: [id])

  @@map("parcels")
}

model StatusHistory {
  parcelId String
  status   Status
  date     DateTime @default(now())

  parcel Parcel @relation(fields: [parcelId], references: [id], onDelete: Cascade)

  @@id([parcelId, date])
  @@map("status_history")
}

model Attachment {
  id       String  @id @default(uuid())
  title    String
  url      String
  parcelId String? @map("parcel_id")
  answerId String? @map("answer_id")

  question Parcel? @relation(fields: [parcelId], references: [id])

  @@map("attachments")
}
